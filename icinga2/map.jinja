{%- set libdir = 'lib64' if salt['grains.get']('cpuarch') == 'x86_64' else 'lib' %}

{%- set kernel = salt['grains.filter_by']({
  'Linux': {
    'package':           'icinga2',
    'service':           'icinga2',
    'conf_dir':          '/etc/icinga2',
    'log_dir':           '/var/log/icinga2',
    'run_dir':           '/var/run/icinga2',
    'spool_dir':         '/var/spool/icinga2',
    'cache_dir':         '/var/cache/icinga2',
    'pki_dir':           '/var/lib/icinga2/certs',
    'ca_dir':            '/var/lib/icinga2/certs',
    'ido_pgsql_package': 'icinga2-ido-pgsql',
    'ido_mysql_package': 'icinga2-ido-mysql',
    'pki_pkg':           'python3-m2crypto',
    'constants': {
      'PluginDir':          '/usr/lib/nagios/plugins',
      'PluginContribDir':   '/usr/lib/nagios/plugins',
      'ManubulonPluginDir': '/usr/lib/nagios/plugins',
    },
    'feature_packages': {
      'ido-pgsql': 'icinga2-ido-pgsql',
      'ido-mysql': 'icinga2-ido-mysql',
    }
  },
  'Windows': {
    'user':              'SYSTEM',
    'group':             '',
    'conf_dir':          'C:/ProgramData/icinga2/etc/icinga2',
    'log_dir':           'C:/ProgramData/icinga2/var/log/icinga2',
    'run_dir':           'C:/ProgramData/icinga2/var/run/icinga2',
    'spool_dir':         'C:/ProgramData/icinga2/var/spool/icinga2',
    'cache_dir':         'C:/ProgramData/icinga2/var/cache/icinga2',
    'pki_dir':           'C:/ProgramData/icinga2/var/lib/icinga2/certs',
    'ca_dir':            'C:/ProgramData/icinga2/var/lib/icinga2/certs',
    'ido_pgsql_package': '',
    'ido_mysql_package': '',
    'service_reload':    '',
    'constants': {
      'PluginDir':          'C:/Program Files/ICINGA2/sbin',
      'PluginContribDir':   'C:/Program Files/ICINGA2/sbin',
      'ManubulonPluginDir': 'C:/Program Files/ICINGA2/sbin',
    }
  }
}, grain='kernel') %}

{%- set os = salt['grains.filter_by']({
  'Debian': {
    'user':    'nagios',
    'group':   'nagios',
    'lib_dir': '/usr/lib',
    'web': {
      'user': 'www-data',
      'group': 'icingaweb2'
    }
  },

  'RedHat': {
    'user':                 'icinga',
    'group':                'icinga',
    'lib_dir':              '/usr/{{ libdir }}',
    'constants': {
      'PluginDir':          '/usr/{{ libdir }}/nagios/plugins',
      'PluginContribDir':   '/usr/{{ libdir }}/nagios/plugins',
      'ManubulonPluginDir': '/usr/{{ libdir }}/nagios/plugins',
    }
  },

  'Suse': {
    'user':                 'icinga',
    'group':                'icinga',
    'lib_dir':              '/usr/{{ libdir }}',
    'constants': {
      'PluginDir':          '/usr/{{ libdir }}/nagios/plugins',
      'PluginContribDir':   '/usr/{{ libdir }}/nagios/plugins',
      'ManubulonPluginDir': '/usr/{{ libdir }}/nagios/plugins',
    }
  }
}, merge=kernel) %}

{%- set defaults = salt['defaults.merge']({
  'constants': {
    'NodeName':           salt['grains.get']('fqdn'),
    'ZoneName':           'NodeName',
    'TicketSalt':         '',
  },
  'plugins': [
    'itl',
    'plugins',
    'plugins-contrib',
    'manubulon',
  ],
  'conf': {
    'icingaapplication': {
      'app': {}
    },
    'zone': {
      'global-templates': {
        'global': true
      },
      'director-global': {
        'global': true
      }
    }
  },
  'features': {
    'api': {
      'ticket_salt': 'TicketSalt',
    },
    'mainlog': {
      'severity': 'information',
      'path': 'LocalStateDir + "/log/icinga2/icinga2.log"'
    },
    'debuglog': {
      'severity': "debug",
      'path': 'LocalStateDir + "/log/icinga2/debug.log"'
    }
  },
  'web': {
    'users': {
      'admin': '$1$PcNxaDqe$4CzgfB.ud.XE.jg37hBXv/',
    },
    'authentication': {
      'icingaweb2': {
        'backend': 'db',
        'resource': 'icingaweb_db'
      }
    },
    'config': {
      'global': {
        'show_stacktraces': 1,
        'config_backend': 'db',
        'config_resource': 'icingaweb_db',
      },
      'logging': {
        'log': 'syslog',
        'level': 'ERROR',
        'application': 'icingaweb2'
      }
    },
    'groups': {
      'icingaweb2': {
        'backend': 'db',
        'resource': 'icingaweb_db'
      }
    },
    'roles': {
      'Administrators': {
        'users': [
          'admin'
        ],
        'permissions': '*',
        'groups': [
          'Administrators'
        ]
      }
    }
  }
}, os) %}

{%- set icinga2 = salt.defaults.merge(defaults, salt.pillar.get('icinga2:lookup', {})) %}
